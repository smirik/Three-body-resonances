#!/usr/bin/ruby
# Extract integrator files from archive
require 'yaml'
require 'catalog/astdys.rb'
require 'mercury/mercury6.rb'
require 'classes/colorize.rb'
require 'commands/command.rb'
require 'classes/functions.rb'
require 'classes/asteroid.rb'
require 'classes/resonance_archive.rb'
require 'classes/resonance_database.rb'
require 'classes/series.rb'
require 'classes/view.rb'
require 'axis/finder.rb'

num_b = CONFIG['integrator']['number_of_bodies']

start    = get_command_line_argument('start', false)
stop     = get_command_line_argument('stop',  false)

action = false
action = ARGV[0] if !ARGV.empty?

if (!action)
  print "[Warning]".to_red+' Please, specify action: '
  action = gets.to_s
end

if (!start)
  print "[Warning]".to_red+' Please, specify first object number: '
  start  = gets
end

start = start.to_i

if (!stop)
  stop = start + CONFIG['integrator']['number_of_bodies']
end
stop = stop.to_i

action.strip!

case action

when 'show'
  puts 'show'
  
when 'plot'
  Command.plot(start, stop)
  puts 'plot'

when 'package'
  clean = get_command_line_argument('clean', false)
  res   = get_command_line_argument('res', false)
  aei   = get_command_line_argument('aei', false)
  zip   = get_command_line_argument('zip', false)
  Command.package(start, clean, res, aei, zip)

when 'extract'
  Command.extract(start)
  
when 'rcopy'
  Command.rcopy(start, stop)
  
when 'stat'
  Command.stat
 
when 'find'
  current = get_command_line_argument('current', false)
  Command.find(start, current)
  
when 'calc'
  Command.calc(start)

when 'calc-mass'
  Command.calc_mass(start, stop)

when 'resonance-show'
  resonance = get_command_line_argument('resonance', false)
  resonance = resonance.delete('[').delete(']').split(',').map{|x| x.to_f}
  Command.resonance_show(resonance)

when 'mediana'
  Command.mediana(start)

when 'resonances'
  Command.resonances(start, stop)

when 'mediana-mass'
  Command.mediana_mass(start, stop)

when 'complex'

else
  puts 'Specify command'

end
